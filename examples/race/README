/*
 * Argus Client Software.  Tools to read, analyze and manage argus data.
 * Copyright (C) 2000-2012 QoSient, LLC.
 * All Rights Reserved
 *
 * THE ACCOMPANYING PROGRAM IS PROPRIETARY SOFTWARE OF QoSIENT, LLC,
 * AND CANNOT BE USED, DISTRIBUTED, COPIED OR MODIFIED WITHOUT
 * EXPRESS PERMISSION OF QoSIENT, LLC.
 *
 */
 
/*
 *
 * raced - The utilities and routines in this directory are intended
 *         to support the race.
 *           
 */

raced       - This routine is the central node for the RACE.
 
   Concept     The fundamental concept is that the raced() runs the
               tasks required to establish an NAIS node on the
               specific machine, which includes binding the local
               race with the federated database to receive messages
               and publish data,  initiate, maintain and terminate
               the project specific tasks, and starts and stops NAIS
               specific maintenace programs, such as archive compression,
               migration and removal.

               At the highest level, the raced provides a central point of
               managment to control and monitor the complete ntias node.

               The intention is that raced uses a database, such as mysql,
               but it is not dependant on a database to funciton.  When
               a real database system is not available.

               On startup the raced will establish the state of the race,
               by first realizing if its using a database or not.  This
               comes from the /etc/race.conf system file, or a ~/.race configuration.
               Without a configuration file, race will attempt to find a database,
               performing any required database integrity checks, the the tables
               exist.

               In the absence of configuraiton, raced will exit.
               If there is any configuration, raced will initiate any NAIS
               maintenance programs and then begin the project tasks.

               Once this is complete the raced will begin the process
               of inserting the node into the global NAIS.

   Database    The raced is the principal process for the NAIS.
               and in support of that role the raced is the primary
               entry point into the fed

               The raced uses the NAIS database to start and manage
               the various tasks needed to support the NAIS and its
               local projects.

                  raced [-D:F:p:u:]
                     -D <level>  -  run in debug mode at <level>.
                     -F <conf>   -  use this rarc configuration file.
                     -p <dbpass> -  set DB access password
                     -u <dbuser> -  access the DB using this account.

               raced will read /etc/race.conf or ~/.race to get its
               basic configuration, which minimally is the user
               account and password, if any, needed to access/create
               the NAIS database.


   Tasks       A principal function is to start and maintain the tasks 
               that are specified in the NAIS:Tasks Table.  The tasks
               are specified as to a type of task, "daemon", "periodic",
               "one time", "on boot", etc....  Daemon processes, will be
               spawned and if they exit they will be restarted.  Any error
               messages or status change will generate a message in the
               NAIS messages table for the specified owner of the Project,
               and for the NAIS administrator.

               The program entry in the Tasks Table must be the complete
               pathname of the program/script to be called.  Wierd failures
               occur when raced doesn't have a path to the program.

               There are no restrictions on the user that owns the raced.
               It inheriently does not need administrative priviledges
               to perform its function.  All clients that are spawned by
               the raced should have explicit configuration files specified
               in the params field of the database.  This is to avoid
               confusion when tasks fail due to permissions or the use
               of default parameters.  It is a good habit to specify
               a '-F conf' parameter for each task.

               Tasks belong to projects.  There is the special NAIS
               project which are the tasks needed to maintian the NAIS
               itself, and would include archive management, stale data
               reclaimation, some cache concurrency tasks, etc..

               Projects and Tasks have rank, which specify the order in which
               tasks will be spawned.  Sort is based on Project then Task.
               Currently the Projects are spawned in alphabetical order,
               but that will change.

               Modifications to the Task table, are not acted on until
               a SIGHUP is sent to the raced.  This is to avoid the raced
               from chasing user configuration errors.  Make the changes,
               when you're happy, then send a HUP to the raced.  Any
               changes, will cause any affected running tasks to be stopped
               (sent SIGHUP) and then restarted with the new parameters.
               Removing an entry in the Tasks table, will result in the
               task being killed by the raced, when it rereads the
               configuration.



