/*
 * Argus Client Software. Tools to read, analyze and manage Argus data.
 * Copyright (c) 2000-2022 QoSient, LLC
 * All rights reserved.
 *
 * THE ACCOMPANYING PROGRAM IS PROPRIETARY SOFTWARE OF QoSIENT, LLC,
 * AND CANNOT BE USED, DISTRIBUTED, COPIED OR MODIFIED WITHOUT
 * EXPRESS PERMISSION OF QoSIENT, LLC.
 *
 * QOSIENT, LLC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
 * SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS, IN NO EVENT SHALL QOSIENT, LLC BE LIABLE FOR ANY
 * SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
 * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
 * THIS SOFTWARE.
 *
 *  rastream -  argus data stream block processor
 *  
 *  Author: Carter Bullard carter@qosient.com
 *
 */

/*
 * $Id: //depot/gargoyle/clients/examples/rastream/README#4 $
 * $DateTime: 2014/10/07 15:23:30 $
 * $Change: 2939 $
 */


This directory contains source code for rastream.1, a program that extends
the features of rasplit.1, and acts as a true stream block processor.

The basic idea is that rasplit is good a generating files, but there isn't
the idea that the file is " done " so that additional processing can be
done.  With time based streaming data, you only need to wait until all the
time data arrives and you then you can post-process the data.

rastream.1 needs a time delay using the "-B secs" option (block buffer).
This defines the time period needed to ensure that all the records have
arrived from all the sensors being collected.  If all the argi generate
5 second flow status records, and they are time synchronized, then the
block buffer should be just greater than 5 seconds.  Because the time of
day on each sensor is not quite perfect, we add a bit of wobble, so
values such as "-B 15" are reasonable.   

It is VERY important to know that when records are behind the block buffer,
((record stime) < (current time - Boption)), they will be discarded !!!!
rastream.1 should be able to figure out what the hold buffer should be,
and that is for future work.

When rastream.1 is splitting based on time, and the time boundary for the
file is reached, rastream.1 will wait the hold buffer, and then it will
close the file, and run a single program, passing the arguements
 "-r filename".  This is where you provide the post-processing you want to
do on the file.  Things like aggregation, filtering, indexing, and
compression are very common.  Examples programs are provides in 
./support/Config/rastream.sh.

See the manpage for rastream.1 for details.
